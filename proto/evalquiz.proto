syntax = "proto3";

import "google/protobuf/any.proto";

service PipelineServer {
    rpc IterateConfig (InternalConfig) returns (stream PipelineStatus) {}
}

service MaterialServer {
    rpc UploadMaterial (stream MaterialUploadData) returns (Empty) {}
	rpc DeleteMaterial (String) returns (Empty) {}
	rpc GetMaterialHashes (Empty) returns (ListOfStrings) {}
	rpc GetMaterial (String) returns (LectureMaterial) {}
}

message Empty {

}

message String {
    string value = 1;
}

message ListOfStrings {
    repeated string values = 1;
}

message MaterialUploadData {
    oneof material_upload_data {
        LectureMaterial lecture_material = 1;
        bytes data = 2;
    }
}

/**
Matches question type specification.
*/
message InternalConfig {
	repeated string material_server_urls = 1;
    repeated Batch batches = 2;
    optional CourseSettings course_settings = 3;
    optional GenerationSettings generation_settings = 4;
    optional EvaluationSettings evaluation_settings = 5;
}

message CourseSettings {
    repeated Capability course_goals = 1;
    repeated Capability required_capabilites = 2;
    repeated Capability advantageous_capabilities = 3;
}

message Capability {
	repeated string keywords = 1;
    EducationalObjective educational_objective = 2;
    Relationship relationship = 3;
}

enum EducationalObjective {
	KNOW_AND_UNDERSTAND = 0;
	APPLY = 1;
	ANALYZE = 2;
	SYNTHESIZE = 3;
	EVALUATE = 4;
	INNOVATE = 5;
}

enum Relationship {
	SIMILARITY = 0;
	DIFFERENCES = 1;
	ORDER = 2;
	COMPLEX = 3;
}

message GenerationSettings {
    optional Mode mode = 1;
}

message Mode {
    oneof mode {
        Complete complete = 1;
        Overwrite overwrite = 2;
        ByMetrics by_metrics = 3;
    }
}

message Complete {
    
}

message Overwrite {
    
}

message ByMetrics {
	string arithmeticExpression = 1;
}

message EvaluationSettings {
    repeated Metric metrics = 1;
}

message Question {
    QuestionType question_type = 1;
    Result result = 2;
    Evaluation evaluation = 3;
}

enum QuestionType {
	MULTIPLE_CHOICE = 0;
	MULTIPLE_RESPONSE = 1;
}

message Result {
    oneof result {
        MultipleChoice multiple_choice = 1;
        MultipleResponse multiple_response = 2;
    }
}

message MultipleChoice {
	string question_text = 1;
	string answer_text = 2;
	repeated string distractor_text = 3;
}

message MultipleResponse {
	string question_text = 1;
	repeated string answer_texts = 2;
	repeated string distractor_texts = 3;
}

message Evaluation {
	string reference = 1;
	google.protobuf.Any result = 2;
}

message Metric {
	string reference = 1;
    optional Mode mode = 2;
    EvaluationType evaluation_type = 3;
}

message EvaluationType {
    oneof evaluation_type {
        LanguageModelEvaluation language_model_evaluation = 1;
    }
}

message LanguageModelEvaluation {
	string evaluationQuestion = 1;
    repeated Question examples = 2;
    ResultType result_type = 3;
}

message ResultType {
    oneof result_type {
        ValueRange value_range = 1;
        Categorical categorical = 2;
    }
}

message ValueRange {
	float lowerBound = 1;
	float upperBound = 2;
}

message Categorical {
	repeated string categories = 1;
}

message Batch {
    repeated LectureMaterial lecture_materials = 1;
    repeated Question question_to_generate = 2;
    repeated Capability capabilites = 3;
}

message LectureMaterial {
	string reference = 1;
	optional string url = 2;
	string hash = 3;
	string file_type = 4;
    optional PageFilter page_filter = 5;
}

message PageFilter {
	int32 lowerBound = 1; 
	int32 upperBound = 2;
}

message PipelineStatus {
    optional google.protobuf.Any result = 1;
    repeated BatchStatus batch_status = 2;
}

message BatchStatus {
	optional string error_message = 1;
    PipelineModule pipeline_module = 2;
}

enum ModuleStatus {
	RUNNING = 0;
	FAILED = 1;
	SUCCESS = 2;
}

enum PipelineModule {
	CONFIG_DESERIALIZATION = 0;
    MATERIAL_FILTER = 1;
    QUESTION_GENERATION = 2;
    QUESTION_SPECIFICATION_MERGE = 3;
    QUESTION_EVALUATION = 4;
    QUESTION_DROP = 5;
    CONFIG_MERGE = 6;
    CONFIG_SERIALIZATION = 7;
}